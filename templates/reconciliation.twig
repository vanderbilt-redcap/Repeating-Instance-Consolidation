{% extends "base.twig" %}

{% if title %}
	{% block title %}{{ title }}{% endblock %}
{% endif %}

{% block content %}
<form method='POST'>
	<table class='table-bordered wdgmctable'>
		<thead>
			<tr>
				<th rowspan='2' class="bordercol">
					<h3>{{ displayName }}</h3>
					Form/Instance<br />
					<a target="_blank" href="{{ logUrl }}">record log history</a> <br /><br />
					<div style="font-weight:normal">* <b>bold</b> indicates already reconciled data</div>
				</th>
				<th class="bordercol"></th>
			{% for col,fieldName in fieldList %}
			    <th class="bordercol hdrnum m{{ col }} hdrback" colspan="{{ fieldDetails[col]|length }}">
			        {{ fieldName }}
			    </th>
			{% endfor %}
            </tr>
            <tr class="initrow">
	            <td class="head bordercol ca">
		            <div class="thead"></div>
		            <div class="ca_val">Accept_Test</div>
	            </td>
                {% for col,fieldName in fieldList %}
                    {% for checkLabel in fieldDetails[col] %}
                        <td class="head bordercol ca ca_{{ col }}">
                            <div class="thead"></div>
                            <div class="ca_val">{{ checkLabel }}</div>
                        </td>
                    {% endfor %}
                {% endfor %}
            </tr>
			<tr class="toprow">
				<td class="firstcol bordercol">Unacceptable List</td>
				<td class="bordercol"></td>
				{% for fieldKey,fieldData in unacceptableList %}
					{% for rawValue,isChecked in fieldData %}
						<td class="bordercol ca">
							<div class="{{ isChecked == 1 ? "x" : "o" }}" onclick="toggleUnacceptable($(this))">
								<input type="hidden" name="unacceptable-{{ rawValue }}" />
							</div>
						</td>
					{% endfor %}
				{% endfor %}
			</tr>
		</thead>
		<tbody>
		{% for row,rowDetails in outputData %}
			<tr z-index="10" class="tableRow{{ rowDetails["start-hidden"] ? " start-hidden hidden" : "" }} matched_{{ rowDetails["matched-value"] }}">
			{% if rowDetails["reconciled"] %}
				{% if rowDetails["start-hidden"] %}
					<td class="firstcol bordercol" style="padding-left:20px">
						<b>-{{ rowDetails["form"] }} Instance {{ rowDetails["instance"] }}: {{ rowDetails["matched-string"] }}</b>
					</td>
				{% else %}
					<td class="firstcol bordercol">
						<b>{{ rowDetails["form"] }} Instance {{ rowDetails["instance"] }}: {{ rowDetails["matched-string"] }}</b>
						<button onclick="toggleHiddenRows('matched_{{ rowDetails["matched-value"] }}',$(this));return false;">+</button>
					</td>
				{% endif %}
				<td class="bordercol"></td>
			{% else %}
				<td class="firstcol bordercol">
					<a target="_blank" href="{{ constant("APP_PATH_WEBROOT") }}DataEntry/index.php?pid={{ rowDetails["pid"] }}&page={{ rowDetails["form_full"] }}&id={{ rowDetails["record"] }}&event_id={{ rowDetails["event"] }}&instance={{ rowDetails["instance"] }}">
						{{ rowDetails["form"] }} Instance {{ rowDetails["instance"] }}: {{ rowDetails["matched-string"] }}
					</a>
				</td>
				<td class="bordercol">
					<input type="checkbox" onclick="acceptAction($(this),'{{ rowDetails["matched-value"] }}');"
						class="accept_{{ rowDetails["matched-value"] }}"
						name="accept_{{ rowDetails["matched-value"] }}"
						value="{{ rowDetails["matched-value"] }}"/>
				</td>
			{% endif %}
				{% for fieldKey,fieldData in rowDetails["data"] %}
					{% for rawValue,rawData in fieldData %}
						<td class="bordercol ca ca_{{ rawValue }}{{ rawValue == 0 ? fieldKey : "" }}{{ rawData["issue"] ? " bgred" : "" }}{{ rawData["unmatched"] ? " bggreen" : "" }}">
							<div class="{{ rawData["value"] ? "x" : "o" }} match_{{ rowDetails["matched-value"] }}" onclick="toggleAntigen($(this),'.match_{{ rowDetails["matched-value"] }}','.ca_{{ rawValue }}{{ rawValue == 0 ? fieldKey : "" }}','{{ rawData["issue"] }}');">
								<input type="hidden" name="{{ rowDetails["matched-value"] }}|{{ rawValue }}[]" />
							</div>
						</td>
					{% endfor %}
				{% endfor %}
			</tr>
		{% endfor %}
		</tbody>
		<tfoot>
		</tfoot>
	</table>
	<div style="margin-left:10px;margin-top:35px">
		<input type='submit' value='Save Reconciliation' />
		<button style="margin-left:20px" onclick="window.location='{{ reportUrl }}';return false;">Return to Report</button>
	</div>
</form>

<script type="text/javascript">
	$(document).ready(function() {
		var unmatchedRows = $(".bgred").parent();

		unmatchedRows.addClass("bgred");
		unmatchedRows.find("input[type='checkbox']").hide();

		$(".bggreen").parent().addClass("bggreen");

		$(".hdrnum").each(function( index, element ){
			if(index%2 == 0){
				$(this).addClass("todd");
			}
			$(this).addClass("hdrback");
			$(this).css("padding-left","10px");
			$(this).css("padding-right","10px");
			//$(this).before("<div class='hdrback "+addtclass+"' style='position:absolute; left:" + (offset.left) + "px; top:0px; height:"+$(".wdgmctable").height()+"px; width:"+$(this).width()+"px; z-index: -1;'></div>");
		});

		$(".wdgmctable").DataTable({
			fixedColumns: {
				leftColumns: 1
			},
			fixedHeader: true,
			scrollX: true,
			scrollY: window.innerHeight - 260,
			fixedFooter: true,
			paging:   false,
			ordering: false,
			info:     false,
			searching:  false,
			orderClasses: false
		});

		$("tr.odd").removeClass("odd");
		$("tr.even").removeClass("even");

		$('.dataTables_scrollBody thead tr').css({visibility:'collapse'});
	});

	function toggleAntigen(clickedCell,matchingClass,columnClass,hasIssue) {
		let curClass = false;
		let curChange = false;
		if(clickedCell.hasClass("x")) {
			curClass = true;
		}
		if(clickedCell.parent().hasClass("changed") && hasIssue == "") {
			curChange = true;
		}

		$(columnClass).each(function() {
			let matchedCell = $(this).find(matchingClass);

			if(matchedCell.length > 0) {
				if(curClass) {
					matchedCell.removeClass("x");
					matchedCell.addClass("o");
					matchedCell.find("input").val("0");
				}
				else {
					matchedCell.removeClass("o");
					matchedCell.addClass("x");
					matchedCell.find("input").val("1");
				}

				if(curChange) {
					matchedCell.parent().removeClass("changed");
				}
				else {
					matchedCell.parent().addClass("changed");
				}
			}
		});
	}

	function toggleUnacceptable(clickedCell) {
		let curClass = false;
		let curChange = false;
		if(clickedCell.hasClass("x")) {
			curClass = true;
		}

		if(clickedCell.parent().hasClass("changed")) {
			curChange = true;
		}

		if(curClass) {
			clickedCell.removeClass("x");
			clickedCell.addClass("o");
			clickedCell.find("input").val("0");
		}
		else {
			clickedCell.removeClass("o");
			clickedCell.addClass("x");
			clickedCell.find("input").val("1");
		}

		if(curChange) {
			clickedCell.parent().removeClass("changed");
		}
		else {
			clickedCell.parent().addClass("changed");
		}
	}

	function toggleHiddenRows(matchedClass,button) {
		var rowsToToggle = $("."+ matchedClass + ".start-hidden");
		if(rowsToToggle.hasClass("hidden")) {
			rowsToToggle.removeClass("hidden");
			button.html("-");
		}
		else {
			rowsToToggle.addClass("hidden");
			button.html("+");
		}
	}

	function acceptAction(checkedBox, matchedValue) {
		let curChange = false;
		if(checkedBox.parent().hasClass("changed")) {
			curChange = true;
		}
		var checkedValue = checkedBox.prop("checked");
		$(".accept_" + matchedValue).each(function() {
			$(this).prop("checked",checkedValue);
		});
		if(curChange) {
			checkedBox.parent().removeClass("changed");
		}
		else {
			checkedBox.parent().addClass("changed");
		}
	}

	$('form').submit(function () {
		$(this).find('td:not(.changed)').find('input').remove();
	});
</script>
{% endblock %}
